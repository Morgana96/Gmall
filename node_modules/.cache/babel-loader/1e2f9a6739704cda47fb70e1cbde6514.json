{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { window } from 'ssr-window';\nimport Utils from '../../../utils/utils';\nimport Support from '../../../utils/support';\nimport Browser from '../../../utils/browser';\nexport default function () {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    $wrapperEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: ''\n  });\n  let slidesNumberEvenToRows;\n\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n\n      if (params.slidesPerColumnFill === 'column' || params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - column * slidesPerColumn;\n\n          if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n            row += 1;\n\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          const groupIndex = Math.floor(i / params.slidesPerGroup);\n          row = Math.floor(i / params.slidesPerView) - groupIndex * params.slidesPerColumn;\n          column = i - row * params.slidesPerView - groupIndex * params.slidesPerView;\n        }\n\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(`margin-${swiper.isHorizontal() ? 'top' : 'left'}`, row !== 0 && params.spaceBetween && `${params.spaceBetween}px`).attr('data-swiper-column', column).attr('data-swiper-row', row);\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({\n      width: `${swiper.virtualSize + params.spaceBetween}px`\n    });else $wrapperEl.css({\n      height: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({\n      width: `${swiper.virtualSize + params.spaceBetween}px`\n    });else $wrapperEl.css({\n      height: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({\n        marginLeft: `${spaceBetween}px`\n      });else slides.css({\n        marginRight: `${spaceBetween}px`\n      });\n    } else slides.css({\n      marginBottom: `${spaceBetween}px`\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}","map":{"version":3,"names":["window","Utils","Support","Browser","swiper","params","$wrapperEl","size","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","length","children","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","index","indexOf","parseFloat","replace","virtualSize","css","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","i","slide","eq","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","order","isHorizontal","attr","slideStyles","getComputedStyle","currentTransform","style","transform","currentWebKitTransform","webkitTransform","roundLengths","outerWidth","outerHeight","width","getPropertyValue","paddingLeft","paddingRight","boxSizing","isIE","height","paddingTop","paddingBottom","swiperSlideSize","push","centeredSlides","abs","newSlidesGrid","effect","flexbox","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","forEach","slideSizeValue","allSlidesOffset","snap","snapIndex","extend","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset"],"sources":["D:/Morgana/front-end/vue/app/shopping/node_modules/swiper/src/components/core/update/updateSlides.js"],"sourcesContent":["import { window } from 'ssr-window';\nimport Utils from '../../../utils/utils';\nimport Support from '../../../utils/support';\nimport Browser from '../../../utils/browser';\n\nexport default function () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (\n        (params.slidesPerColumnFill === 'column')\n        || (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1)\n      ) {\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          const groupIndex = Math.floor(i / params.slidesPerGroup);\n          row = Math.floor(i / params.slidesPerView) - groupIndex * params.slidesPerColumn;\n          column = i - row * params.slidesPerView - groupIndex * params.slidesPerView;\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
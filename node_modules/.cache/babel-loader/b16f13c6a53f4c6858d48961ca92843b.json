{"ast":null,"code":"import Support from '../../../utils/support';\nexport default function (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex]; // Update progress\n\n  swiper.updateProgress(translate); // Normalize slideIndex\n\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  } // Directions locks\n\n\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex); // Update Height\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    swiper.updateSlidesClasses();\n\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}","map":{"version":3,"names":["Support","index","speed","params","runCallbacks","internal","swiper","slideIndex","snapGrid","slidesGrid","previousIndex","activeIndex","rtlTranslate","rtl","animating","preventInteractionOnTransition","snapIndex","Math","floor","slidesPerGroup","length","initialSlide","emit","translate","updateProgress","normalizeSlideIndex","i","initialized","allowSlideNext","minTranslate","allowSlidePrev","maxTranslate","direction","updateActiveIndex","autoHeight","updateAutoHeight","updateSlidesClasses","effect","setTranslate","transitionStart","transitionEnd","transition","setTransition","onSlideToWrapperTransitionEnd","e","destroyed","target","$wrapperEl","removeEventListener","addEventListener"],"sources":["D:/Morgana/front-end/vue/app/shopping/node_modules/swiper/src/components/core/slide/slideTo.js"],"sourcesContent":["import Support from '../../../utils/support';\n\nexport default function (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { reqGoodsinfo } from '@/api';\nconst state = {\n  GoodInfo: {}\n};\nconst mutations = {\n  GetGoodInfo(state, GoodInfo) {\n    state.GoodInfo = GoodInfo;\n  }\n\n};\nconst actions = {\n  async getGoodInfo({\n    commit\n  }, skuid) {\n    let result = await reqGoodsinfo(skuid);\n\n    if (result.code == 200) {\n      commit(\"GetGoodInfo\", result.data);\n    }\n  }\n\n};\nconst getters = {\n  categoryView(state) {\n    return state.GoodInfo.categoryView || [];\n  }\n\n};\nexport default {\n  state,\n  actions,\n  mutations,\n  getters\n};","map":{"version":3,"names":["reqGoodsinfo","state","GoodInfo","mutations","GetGoodInfo","actions","getGoodInfo","commit","skuid","result","code","data","getters","categoryView"],"sources":["D:/Morgana/front-end/vue/app/shopping/src/store/detail.js"],"sourcesContent":["import {reqGoodsinfo} from '@/api'\r\nconst state = {\r\n    GoodInfo:{}\r\n}\r\nconst mutations = {\r\n    GetGoodInfo(state, GoodInfo){\r\n        state.GoodInfo = GoodInfo\r\n    }\r\n}\r\nconst actions = {\r\n    async getGoodInfo({ commit }, skuid){\r\n        let result = await reqGoodsinfo (skuid);\r\n        if (result.code == 200) {\r\n            commit(\"GetGoodInfo\", result.data);\r\n          }\r\n    }\r\n}\r\nconst getters = {\r\n    categoryView(state){\r\n        return state.GoodInfo.categoryView||[]\r\n    }\r\n}\r\n\r\nexport default{\r\n    state, actions, mutations, getters\r\n}"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,OAA3B;AACA,MAAMC,KAAK,GAAG;EACVC,QAAQ,EAAC;AADC,CAAd;AAGA,MAAMC,SAAS,GAAG;EACdC,WAAW,CAACH,KAAD,EAAQC,QAAR,EAAiB;IACxBD,KAAK,CAACC,QAAN,GAAiBA,QAAjB;EACH;;AAHa,CAAlB;AAKA,MAAMG,OAAO,GAAG;EACZ,MAAMC,WAAN,CAAkB;IAAEC;EAAF,CAAlB,EAA8BC,KAA9B,EAAoC;IAChC,IAAIC,MAAM,GAAG,MAAMT,YAAY,CAAEQ,KAAF,CAA/B;;IACA,IAAIC,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;MACpBH,MAAM,CAAC,aAAD,EAAgBE,MAAM,CAACE,IAAvB,CAAN;IACD;EACN;;AANW,CAAhB;AAQA,MAAMC,OAAO,GAAG;EACZC,YAAY,CAACZ,KAAD,EAAO;IACf,OAAOA,KAAK,CAACC,QAAN,CAAeW,YAAf,IAA6B,EAApC;EACH;;AAHW,CAAhB;AAMA,eAAc;EACVZ,KADU;EACHI,OADG;EACMF,SADN;EACiBS;AADjB,CAAd"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Utils from '../../../utils/utils';\nexport default function () {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Set breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(param => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}","map":{"version":3,"names":["Utils","swiper","activeIndex","initialized","loopedSlides","params","breakpoints","Object","keys","length","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","undefined","forEach","param","paramValue","parseFloat","parseInt","breakpointParams","originalParams","directionChanged","direction","needsReLoop","loop","slidesPerView","changeDirection","extend","allowTouchMove","allowSlideNext","allowSlidePrev","loopDestroy","loopCreate","updateSlides","slideTo","emit"],"sources":["D:/Morgana/front-end/vue/app/shopping/node_modules/swiper/src/components/core/breakpoints/setBreakpoint.js"],"sourcesContent":["import Utils from '../../../utils/utils';\n\nexport default function () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,sBAAlB;AAEA,eAAe,YAAY;EACzB,MAAMC,MAAM,GAAG,IAAf;EACA,MAAM;IACJC,WADI;IACSC,WADT;IACsBC,YAAY,GAAG,CADrC;IACwCC;EADxC,IAEFJ,MAFJ;EAGA,MAAMK,WAAW,GAAGD,MAAM,CAACC,WAA3B;EACA,IAAI,CAACA,WAAD,IAAiBA,WAAW,IAAIC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,MAAzB,KAAoC,CAAxE,EAA4E,OANnD,CAQzB;;EACA,MAAMC,UAAU,GAAGT,MAAM,CAACU,aAAP,CAAqBL,WAArB,CAAnB;;EAEA,IAAII,UAAU,IAAIT,MAAM,CAACW,iBAAP,KAA6BF,UAA/C,EAA2D;IACzD,MAAMG,oBAAoB,GAAGH,UAAU,IAAIJ,WAAd,GAA4BA,WAAW,CAACI,UAAD,CAAvC,GAAsDI,SAAnF;;IACA,IAAID,oBAAJ,EAA0B;MACxB,CAAC,eAAD,EAAkB,cAAlB,EAAkC,gBAAlC,EAAoDE,OAApD,CAA6DC,KAAD,IAAW;QACrE,MAAMC,UAAU,GAAGJ,oBAAoB,CAACG,KAAD,CAAvC;QACA,IAAI,OAAOC,UAAP,KAAsB,WAA1B,EAAuC;;QACvC,IAAID,KAAK,KAAK,eAAV,KAA8BC,UAAU,KAAK,MAAf,IAAyBA,UAAU,KAAK,MAAtE,CAAJ,EAAmF;UACjFJ,oBAAoB,CAACG,KAAD,CAApB,GAA8B,MAA9B;QACD,CAFD,MAEO,IAAIA,KAAK,KAAK,eAAd,EAA+B;UACpCH,oBAAoB,CAACG,KAAD,CAApB,GAA8BE,UAAU,CAACD,UAAD,CAAxC;QACD,CAFM,MAEA;UACLJ,oBAAoB,CAACG,KAAD,CAApB,GAA8BG,QAAQ,CAACF,UAAD,EAAa,EAAb,CAAtC;QACD;MACF,CAVD;IAWD;;IAED,MAAMG,gBAAgB,GAAGP,oBAAoB,IAAIZ,MAAM,CAACoB,cAAxD;IACA,MAAMC,gBAAgB,GAAGF,gBAAgB,CAACG,SAAjB,IAA8BH,gBAAgB,CAACG,SAAjB,KAA+BlB,MAAM,CAACkB,SAA7F;IACA,MAAMC,WAAW,GAAGnB,MAAM,CAACoB,IAAP,KAAgBL,gBAAgB,CAACM,aAAjB,KAAmCrB,MAAM,CAACqB,aAA1C,IAA2DJ,gBAA3E,CAApB;;IAEA,IAAIA,gBAAgB,IAAInB,WAAxB,EAAqC;MACnCF,MAAM,CAAC0B,eAAP;IACD;;IAED3B,KAAK,CAAC4B,MAAN,CAAa3B,MAAM,CAACI,MAApB,EAA4Be,gBAA5B;IAEApB,KAAK,CAAC4B,MAAN,CAAa3B,MAAb,EAAqB;MACnB4B,cAAc,EAAE5B,MAAM,CAACI,MAAP,CAAcwB,cADX;MAEnBC,cAAc,EAAE7B,MAAM,CAACI,MAAP,CAAcyB,cAFX;MAGnBC,cAAc,EAAE9B,MAAM,CAACI,MAAP,CAAc0B;IAHX,CAArB;IAMA9B,MAAM,CAACW,iBAAP,GAA2BF,UAA3B;;IAEA,IAAIc,WAAW,IAAIrB,WAAnB,EAAgC;MAC9BF,MAAM,CAAC+B,WAAP;MACA/B,MAAM,CAACgC,UAAP;MACAhC,MAAM,CAACiC,YAAP;MACAjC,MAAM,CAACkC,OAAP,CAAgBjC,WAAW,GAAGE,YAAf,GAA+BH,MAAM,CAACG,YAArD,EAAmE,CAAnE,EAAsE,KAAtE;IACD;;IAEDH,MAAM,CAACmC,IAAP,CAAY,YAAZ,EAA0BhB,gBAA1B;EACD;AACF"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//按需引入：只是把需要的功能引入进来\nimport throttle from \"lodash/throttle\"; //vuex辅助函数mapState获取仓库数据\n\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"TypeNav\",\n\n  data() {\n    return {\n      //索引值的存储\n      currentIndex: -1,\n      //控制三级联动的显示与隐藏的\n      show: true\n    };\n  },\n\n  computed: { //mapState辅助函数中的对象右侧函数，注入的实参，是vuex的大仓库的state\n    ...mapState({\n      categoryList: state => state.home.categoryList\n    })\n  },\n  methods: {\n    //h3的鼠标移入事件:用户行为如果过快，会出现浏览器反应不过来的现象----【用户行为太快】\n    //回调函数里面业务代码很多，卡顿、业务没有完整完成。\n    //节流功能\n    changeIndex: throttle(function (index) {\n      this.currentIndex = index;\n    }, 20),\n\n    //编程式导航按钮的回调函数\n    goSearch(event) {\n      //点击a标签进行路由跳转：父节点代理的子节点的类型很多 div h3 dd dt em a\n      //通过event可以获取到当前触发事件的节点\n      let nodeElement = event.target; //给a标签添加自定义属性data-categoryName，保证这个节点带data-categoryName，一定是a标签\n      //可以通过节点的dataset属性获取相应节点的自定义属性，返回的是一个对象KV【自定义属性相关的】\n      //如果带有categoryname字段的一定是a标签\n\n      let {\n        categoryname,\n        category1id,\n        category2id,\n        category3id\n      } = nodeElement.dataset; //执行if语句：只能区分点击的标签是不是a\n\n      if (categoryname) {\n        //准备路由跳转的参数\n        let location = {\n          name: \"search\"\n        };\n        let query = {\n          categoryName: categoryname\n        }; //一级分类的a标签\n\n        if (category1id) {\n          query.category1Id = category1id; //二级分类的a标签\n        } else if (category2id) {\n          query.category2Id = category2id; //三级分类a标签\n        } else {\n          query.category3Id = category3id;\n        } //路由跳转之前：看一下有没有params参数，如果有params参数需要携带给search\n\n\n        if (this.$route.params) {\n          //query参数\n          location.query = query; //params\n\n          location.params = this.$route.params; //如有有params参数也需要携带给search模块\n          //home->search确实需要记录历史\n          //search->search不需要存储历史记录\n\n          if (this.$route.path != \"/home\") {\n            this.$router.replace(location);\n          } else {\n            this.$router.push(location);\n          }\n        }\n      }\n    },\n\n    //修改show的属性的方法（鼠标进入）\n    changeShow() {\n      //鼠标移上去三级联动需要隐藏\n      //下面代码只有在serach模块的时候，才会执行\n      if (this.$route.path != \"/home\") {\n        this.show = true;\n      }\n    },\n\n    //修改show的属性的方法（鼠标离开）\n    leaveShow() {\n      //鼠标移出的时候，三级联动的一级菜单没有背景颜色\n      this.currentIndex = -1; //需要把三级联动展示出来\n\n      if (this.$route.path != \"/home\") {\n        this.show = false;\n      }\n    }\n\n  },\n\n  //组件挂载完毕\n  //home与search路由组件跳转的时候:相应的组件（销毁、重新创建），子组件也需要【销毁创建的】\n  mounted() {\n    //每一个路由跳转的时候，进行一次判断，如果【不是home路由】即为search\n    if (this.$route.path != \"/home\") {\n      this.show = false;\n    }\n  }\n\n};","map":{"version":3,"mappings":";AA6EA;AACA,uC,CACA;;AACA;AACA;EACAA,eADA;;EAEAC;IACA;MACA;MACAC,gBAFA;MAGA;MACAC;IAJA;EAMA,CATA;;EAUAC,YACA;IACA;MACAC;IADA;EAFA,CAVA;EAgBAC;IACA;IACA;IACA;IACAC;MACA;IACA,CAFA,EAEA,EAFA,CAJA;;IAOA;IACAC;MACA;MACA;MACA,+BAHA,CAIA;MACA;MACA;;MACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,IACAC,mBADA,CAPA,CASA;;MACA;QACA;QACA;UAAAb;QAAA;QACA;UAAAc;QAAA,EAHA,CAIA;;QACA;UACAC,gCADA,CAEA;QACA,CAHA,MAGA;UACAA,gCADA,CAEA;QACA,CAHA,MAGA;UACAA;QACA,CAbA,CAcA;;;QACA;UACA;UACAC,uBAFA,CAGA;;UACAA,qCAJA,CAKA;UACA;UACA;;UACA;YACA;UACA,CAFA,MAEA;YACA;UACA;QACA;MACA;IACA,CAhDA;;IAiDA;IACAC;MACA;MACA;MACA;QACA;MACA;IACA,CAxDA;;IAyDA;IACAC;MACA;MACA,uBAFA,CAGA;;MACA;QACA;MACA;IACA;;EAjEA,CAhBA;;EAmFA;EACA;EACAC;IACA;IACA;MACA;IACA;EACA;;AA1FA","names":["name","data","currentIndex","show","computed","categoryList","methods","changeIndex","goSearch","categoryname","category1id","category2id","category3id","nodeElement","categoryName","query","location","changeShow","leaveShow","mounted"],"sourceRoot":"src/components/TypeNav","sources":["index.vue"],"sourcesContent":["<template>\r\n    <div class=\"type-nav\">\r\n      <div class=\"container\">\r\n        <div @mouseleave=\"leaveShow\">\r\n          <h2 class=\"all\" @mouseenter=\"changeShow\">全部商品分类</h2>\r\n          <!-- 三级联动结构||过渡动画效果-->\r\n          <transition name=\"sort\">\r\n            <div class=\"sort\" v-show=\"show\">\r\n              <!-- 事件的委派更加合理一些 -->\r\n              <div class=\"all-sort-list2\" @click=\"goSearch\">\r\n                <div\r\n                  class=\"item\"\r\n                  v-for=\"(c1, index) in categoryList\"\r\n                  :key=\"c1.categoryId\"\r\n                  @mouseenter=\"changeIndex(index)\"\r\n                >\r\n                  <h3 :class=\"{ show: currentIndex === index }\">\r\n                    <a\r\n                      :data-categoryName=\"c1.categoryName\"\r\n                      :data-category1Id=\"c1.categoryId\"\r\n                      >{{ c1.categoryName }}</a\r\n                    >\r\n                  </h3>\r\n                  <div\r\n                    class=\"item-list clearfix\"\r\n                    :style=\"{\r\n                      display: currentIndex === index ? 'block' : 'none',\r\n                    }\"\r\n                  >\r\n                    <div\r\n                      class=\"subitem\"\r\n                      v-for=\"(c2, index) in c1.categoryChild\"\r\n                      :key=\"c2.categoryId\"\r\n                    >\r\n                      <dl class=\"fore\">\r\n                        <dt>\r\n                          <a\r\n                            :data-categoryName=\"c2.categoryName\"\r\n                            :data-category2Id=\"c2.categoryId\"\r\n                            >{{ c2.categoryName }}</a\r\n                          >\r\n                        </dt>\r\n                        <dd>\r\n                          <em\r\n                            v-for=\"(c3, index) in c2.categoryChild\"\r\n                            :key=\"c3.categoryId\"\r\n                          >\r\n                            <a\r\n                              :data-categoryName=\"c3.categoryName\"\r\n                              :data-category3Id=\"c3.categoryId\"\r\n                              >{{ c3.categoryName }}</a\r\n                            >\r\n                          </em>\r\n                        </dd>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </transition>\r\n        </div>\r\n        <nav class=\"nav\">\r\n          <a>服装城</a>\r\n          <a href=\"###\">美妆馆</a>\r\n          <a href=\"###\">尚品汇超市</a>\r\n          <a href=\"###\">全球购</a>\r\n          <a href=\"###\">闪购</a>\r\n          <a href=\"###\">团购</a>\r\n          <a href=\"###\">有趣</a>\r\n          <a href=\"###\">秒杀</a>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  //按需引入：只是把需要的功能引入进来\r\n  import throttle from \"lodash/throttle\";\r\n  //vuex辅助函数mapState获取仓库数据\r\n  import { mapState } from \"vuex\";\r\n  export default {\r\n    name: \"TypeNav\",\r\n    data() {\r\n      return {\r\n        //索引值的存储\r\n        currentIndex: -1,\r\n        //控制三级联动的显示与隐藏的\r\n        show: true,\r\n      };\r\n    },\r\n    computed: {\r\n      //mapState辅助函数中的对象右侧函数，注入的实参，是vuex的大仓库的state\r\n      ...mapState({\r\n        categoryList: (state) => state.home.categoryList,\r\n      }),\r\n    },\r\n    methods: {\r\n      //h3的鼠标移入事件:用户行为如果过快，会出现浏览器反应不过来的现象----【用户行为太快】\r\n      //回调函数里面业务代码很多，卡顿、业务没有完整完成。\r\n      //节流功能\r\n      changeIndex: throttle(function (index) {\r\n        this.currentIndex = index;\r\n      }, 20),\r\n      //编程式导航按钮的回调函数\r\n      goSearch(event) {\r\n        //点击a标签进行路由跳转：父节点代理的子节点的类型很多 div h3 dd dt em a\r\n        //通过event可以获取到当前触发事件的节点\r\n        let nodeElement = event.target;\r\n        //给a标签添加自定义属性data-categoryName，保证这个节点带data-categoryName，一定是a标签\r\n        //可以通过节点的dataset属性获取相应节点的自定义属性，返回的是一个对象KV【自定义属性相关的】\r\n        //如果带有categoryname字段的一定是a标签\r\n        let { categoryname, category1id, category2id, category3id } =\r\n          nodeElement.dataset;\r\n        //执行if语句：只能区分点击的标签是不是a\r\n        if (categoryname) {\r\n          //准备路由跳转的参数\r\n          let location = { name: \"search\" };\r\n          let query = { categoryName: categoryname };\r\n          //一级分类的a标签\r\n          if (category1id) {\r\n            query.category1Id = category1id;\r\n            //二级分类的a标签\r\n          } else if (category2id) {\r\n            query.category2Id = category2id;\r\n            //三级分类a标签\r\n          } else {\r\n            query.category3Id = category3id;\r\n          }\r\n          //路由跳转之前：看一下有没有params参数，如果有params参数需要携带给search\r\n          if (this.$route.params) {\r\n            //query参数\r\n            location.query = query;\r\n            //params\r\n            location.params = this.$route.params;\r\n            //如有有params参数也需要携带给search模块\r\n            //home->search确实需要记录历史\r\n            //search->search不需要存储历史记录\r\n            if (this.$route.path != \"/home\") {\r\n              this.$router.replace(location);\r\n            } else {\r\n              this.$router.push(location);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      //修改show的属性的方法（鼠标进入）\r\n      changeShow() {\r\n        //鼠标移上去三级联动需要隐藏\r\n        //下面代码只有在serach模块的时候，才会执行\r\n        if (this.$route.path != \"/home\") {\r\n          this.show = true;\r\n        }\r\n      },\r\n      //修改show的属性的方法（鼠标离开）\r\n      leaveShow() {\r\n        //鼠标移出的时候，三级联动的一级菜单没有背景颜色\r\n        this.currentIndex = -1;\r\n        //需要把三级联动展示出来\r\n        if (this.$route.path != \"/home\") {\r\n          this.show = false;\r\n        }\r\n      },\r\n    },\r\n    //组件挂载完毕\r\n    //home与search路由组件跳转的时候:相应的组件（销毁、重新创建），子组件也需要【销毁创建的】\r\n    mounted() {\r\n      //每一个路由跳转的时候，进行一次判断，如果【不是home路由】即为search\r\n      if (this.$route.path != \"/home\") {\r\n        this.show = false;\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped lang=\"less\">\r\n  .type-nav {\r\n    border-bottom: 2px solid #e1251b;\r\n  \r\n    .container {\r\n      width: 1200px;\r\n      margin: 0 auto;\r\n      display: flex;\r\n      position: relative;\r\n  \r\n      .all {\r\n        width: 210px;\r\n        height: 45px;\r\n        background-color: #e1251b;\r\n        line-height: 45px;\r\n        text-align: center;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n      }\r\n  \r\n      .nav {\r\n        a {\r\n          height: 45px;\r\n          margin: 0 22px;\r\n          line-height: 45px;\r\n          font-size: 16px;\r\n          color: #333;\r\n        }\r\n      }\r\n  \r\n      .sort {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 45px;\r\n        width: 210px;\r\n        height: 461px;\r\n        position: absolute;\r\n        background: #fafafa;\r\n        z-index: 999;\r\n  \r\n        .all-sort-list2 {\r\n          .item {\r\n            h3 {\r\n              line-height: 30px;\r\n              font-size: 14px;\r\n              font-weight: 400;\r\n              overflow: hidden;\r\n              padding: 0 20px;\r\n              margin: 0;\r\n  \r\n              a {\r\n                color: #333;\r\n              }\r\n              &.show {\r\n                background: linear-gradient(\r\n                  to right,\r\n                  pink,\r\n                  yellow,\r\n                  cyan,\r\n                  blue,\r\n                  red\r\n                );\r\n              }\r\n            }\r\n  \r\n            .item-list {\r\n              display: none;\r\n              position: absolute;\r\n              width: 734px;\r\n              min-height: 460px;\r\n              background: #f7f7f7;\r\n              left: 210px;\r\n              border: 1px solid #ddd;\r\n              top: 0;\r\n              z-index: 9999 !important;\r\n  \r\n              .subitem {\r\n                float: left;\r\n                width: 650px;\r\n                padding: 0 4px 0 8px;\r\n  \r\n                dl {\r\n                  border-top: 1px solid #eee;\r\n                  padding: 6px 0;\r\n                  overflow: hidden;\r\n                  zoom: 1;\r\n  \r\n                  &.fore {\r\n                    border-top: 0;\r\n                  }\r\n  \r\n                  dt {\r\n                    float: left;\r\n                    width: 54px;\r\n                    line-height: 22px;\r\n                    text-align: right;\r\n                    padding: 3px 6px 0 0;\r\n                    font-weight: 700;\r\n                  }\r\n  \r\n                  dd {\r\n                    float: left;\r\n                    width: 415px;\r\n                    padding: 3px 0 0;\r\n                    overflow: hidden;\r\n  \r\n                    em {\r\n                      float: left;\r\n                      height: 14px;\r\n                      line-height: 14px;\r\n                      padding: 0 8px;\r\n                      margin-top: 5px;\r\n                      border-left: 1px solid #ccc;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //过渡动画的样式\r\n      //如果transiton没有name属性 ： v-enter   v-enter-to v-enter-active\r\n      //如果transition有name属性  ： name的属性值-enter  name的属性值-enter-to\r\n      //进入状态：开始阶段\r\n      .sort-enter {\r\n        height: 0px;\r\n        transform: rotate(0deg);\r\n      }\r\n      //进入状态：结束阶段\r\n      .sort-enter-to {\r\n        height: 461px;\r\n        transform: rotate(360deg);\r\n      }\r\n      //定义过渡动画的时间等等\r\n      .sort-enter-active {\r\n        transition: all 0.2s;\r\n      }\r\n    }\r\n  }\r\n  </style>"]},"metadata":{},"sourceType":"module"}